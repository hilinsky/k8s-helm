# Default values for jenkins-app.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  registry: jfrog.it-academy.by
  repository: public/jenkins-ci:hilinsky-jenkins
  # This sets the pull policy for images.
  # pullPolicy: Always
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

# This is for the secretes for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""
namespaceOverride: ""

#This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/ 
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

usePodSecurityContext: true

podSecurityContext:
  runAsUser: 1000
  runAsGroup: 1000
  fsGroup: 1000

securityContext:
  # capabilities: {}
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: false
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 8080

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: true
  className: "nginx"
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: jenkins.k8s-20.sa
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 3
    memory: 3Gi
  requests:
    cpu: 2
    memory: 2Gi
pvc:
  storage_class: nfs-hilinsky
  storage_size: 10Gi
# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /login
    port: 8080
readinessProbe:
  httpGet:
    path: /login
    port: 8080

#This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.

volumes:
  - name: jenkins-auth-config
    configMap:
      name: jenkins-app
  - name: jenkins-config-yaml
    configMap:
      name: jenkins-app-config
  - name: jenkins-job
    configMap:
      name: jenkins-app-job
  - name: jenkins-job-xml
    nfs:
      server: 192.168.37.105
      path: /mnt/IT-Academy/nfs-data/sa2-29-24/hilinsky/jobs
  - name: persistent-storage
    persistentVolumeClaim:
      claimName: pv-claim-jenkins
# Additional volumeMounts on the output Deployment definition.
volumeMounts:
  - name: jenkins-auth-config
    mountPath: /var/jenkins_home/init.groovy.d/basic-security.groovy
    subPath: basic-security.groovy
  - name: jenkins-config-yaml
    mountPath: /var/jenkins_home/casc_configs/jenkins.yaml
    subPath: jenkins.yaml
  - name: jenkins-job-xml
    mountPath: /var/jenkins_home/jobs
  - name: jenkins-job
    mountPath: /var/jenkins_home/jobs/Ping/config.xml
    subPath: config.xml
  - name: persistent-storage
    mountPath: /var/jenkins_home

admin:
  password: ""

slave:
  port: 50000

nodeSelector: {}

tolerations: []

affinity: {}
